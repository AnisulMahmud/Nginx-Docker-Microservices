worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream service1_backend {
        server service1-1:8199;
        server service1-2:8199;
        server service1-3:8199;
    }

    # Define an upstream block for service2
    upstream service2_backend {
        server service2:5000;
    }

    # Browser traffic and REST API server (Port 8198)
    server {
        listen 8198;

        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        root /usr/share/nginx/html;
        index index.html;

        # Proxy requests to /metrics
        location /metrics {
            proxy_pass http://service2_backend/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /state
        location /state {
            proxy_pass http://service2_backend/state;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /run-log
        location /run-log {
            proxy_pass http://service2_backend/run-log;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /request
        location /request {
            proxy_pass http://service2_backend/request;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /api/ for service1
        location /api/ {
            proxy_pass http://service1_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header X-Upstream-Server $upstream_addr;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Root location for serving static files
        location / {
            try_files $uri $uri/ =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }
    }

    # Dedicated REST API testing server (Port 8197)
    server {
        listen 8197;

        # Proxy requests to /metrics
        location /metrics {
            proxy_pass http://service2_backend/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /state      
        location /state {
            proxy_pass http://service2_backend/state;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /run-log  
        location /run-log {
            proxy_pass http://service2_backend/run-log;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to /request
        location /request {
            proxy_pass http://service2_backend/request;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }
    }
}
