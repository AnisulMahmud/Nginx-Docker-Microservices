stages:
  - build
  - test
  - deploy

services:
  - name: docker:dind
    command: ["--tls=false", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]

before_script:
  # Install base dependencies
  - apk add --no-cache python3 py3-pip bash
  - python3 -m venv /tmp/venv
  - . /tmp/venv/bin/activate
  - pip install --upgrade pip
  - pip install flask requests unittest-xml-reporting

build:
  stage: build
  script:
    - echo "Testing Docker connectivity..."
    - docker info || echo "Docker is not available!"
    - echo "Building service1..."
    - docker build -t service1:latest -f service1/Dockerfile service1/
    - echo "Building service2..."
    - docker build -t service2:latest -f service2/Dockerfile service2/
    - echo "Building Nginx..."
    - docker build -t nginx:latest -f nginx/Dockerfile nginx/
    - echo "Build phase completed!"
  only:
    - project

test:
  stage: test
  script:
    - echo "Cleaning up old containers..."
    - docker ps -aq | xargs -r docker rm -f  # Force remove all existing containers
    - echo "Starting Docker services for testing..."
    - docker-compose up -d                    # Start all services
    - sleep 10                                # Wait for services to initialize
    - echo "Running Python tests..."
    - python3 -m unittest discover -s tests -p "test_*.py"
    - echo "Stopping services after testing..."
    - docker-compose down                     # Stop all services
  only:
    - project

deploy:
  stage: deploy
  script:
    - echo "Cleaning up old containers before deployment..."
    - docker ps -aq | xargs -r docker rm -f  # Force remove all existing containersss
    - echo "Deploying services..."
    - docker-compose up -d                    # Start all services in detached mode
    - echo "Deployment phase completed!"
  only:
    - project
