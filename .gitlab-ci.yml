stages:
  - build
  - test
  - deploy

services:
  - name: docker:dind
    command: ["--tls=false", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]

before_script:
  # Install required dependencies
  - apk add --no-cache python3 py3-pip bash openjdk17 docker-compose
  - python3 -m venv /tmp/venv
  - . /tmp/venv/bin/activate
  - pip install --upgrade pip
  - pip install flask requests unittest-xml-reporting
  
  # Debug: Check project structure and files
  - echo "Listing project contents:"
  - ls -R
  - echo "Checking nginx configuration:"
  - ls -l ./nginx
  - cat ./nginx/nginx.conf || echo "nginx.conf not found"

build:
  stage: build
  script:
    - echo "Building service1 (Java)..."
    - docker build -t service1:latest ./service1
    - echo "Building service2 (Python)..."
    - docker build -t service2:latest ./service2
    - echo "Building nginx..."
    - docker build -t nginx:latest ./nginx
    - echo "Build phase completed!"
    
    # Verify Docker images
    - docker images
  only:
    - project

test:
  stage: test
  script:
    - echo "Starting Docker services for testing..."
    
    # Additional debug information
    - docker-compose config
    
    # Try to start services with more verbose output
    - docker-compose up -d --build
    
    # Extended wait time and service status check
    - sleep 15
    - docker-compose ps
    - docker-compose logs
    
    # Test Python service (service2)
    - echo "Running Python tests for service2..."
    - python3 -m unittest discover -s tests -p "test_app.py"
    
    # Additional debugging for NGINX
    - docker-compose exec -T nginx cat /etc/nginx/nginx.conf || echo "Failed to read NGINX config"
    
    - echo "Stopping services after testing..."
    - docker-compose down
  only:
    - project

deploy:
  stage: deploy
  script:
    - echo "Deploying services..."
    - docker-compose up -d --build
    - docker-compose ps
    - echo "Deployment completed!"
  only:
    - project