stages:
  - build
  - test
  - deploy

services:
  - name: docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  # Install required dependencies
  - apk add --no-cache python3 py3-pip bash docker-compose curl
  - python3 -m venv /tmp/venv
  - . /tmp/venv/bin/activate
  - pip install --upgrade pip flask requests unittest-xml-reporting

build:
  stage: build
  script:
    - echo "Building all services..."
    - docker-compose build  # Build all services in one command
    - docker images
  only:
    - project

test:
  stage: test
  script:
    - echo "Starting services..."
    - docker-compose up -d  # Start all servicess
    - echo "Waiting for services to initialize..."
    - sleep 15  # Allow services to start up
    - echo "Validating NGINX configuration..."
    - docker-compose exec nginx nginx -t  # Validate NGINX config
    - echo "Testing connectivity..."
    #- curl -u anisul-mahmud:docker http://localhost:8198/api/ || echo "NGINX Test failed"
    - python3 -m unittest discover -s tests -p "test_app.py"  # Run Python service tests
    - python3 -m unittest discover -s tests -p "test_gateway.py" # Run Python api gateway  tests
    - echo "Stopping services..."
    - docker-compose down  # Stop all services
  only:
    - project

deploy:
  stage: deploy
  script:
    - echo "Deploying services..."
    - docker-compose up -d  # Start services for productionsss
    - docker-compose ps
  only:
    - project

